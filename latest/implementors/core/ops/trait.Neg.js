(function() {var implementors = {};
implementors["lumol"] = ["impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/trait.Neg.html\" title=\"trait core::ops::Neg\">Neg</a> for <a class=\"struct\" href=\"https://rust-num.github.io/num/num_complex/struct.Complex.html\" title=\"struct num_complex::Complex\">Complex</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/trait.Neg.html\" title=\"trait core::ops::Neg\">Neg</a>&lt;Output = T&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://rust-num.github.io/num/num_traits/trait.Num.html\" title=\"trait num_traits::Num\">Num</a>,&nbsp;</span>","impl&lt;'a, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/trait.Neg.html\" title=\"trait core::ops::Neg\">Neg</a> for &amp;'a <a class=\"struct\" href=\"https://rust-num.github.io/num/num_complex/struct.Complex.html\" title=\"struct num_complex::Complex\">Complex</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/trait.Neg.html\" title=\"trait core::ops::Neg\">Neg</a>&lt;Output = T&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://rust-num.github.io/num/num_traits/trait.Num.html\" title=\"trait num_traits::Num\">Num</a>,&nbsp;</span>","impl&lt;A, S, D&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/trait.Neg.html\" title=\"trait core::ops::Neg\">Neg</a> for <a class=\"struct\" href=\"http://bluss.github.io/rust-ndarray/master/ndarray/struct.ArrayBase.html\" title=\"struct ndarray::ArrayBase\">ArrayBase</a>&lt;S, D&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/trait.Neg.html\" title=\"trait core::ops::Neg\">Neg</a>&lt;Output = A&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;D: <a class=\"trait\" href=\"http://bluss.github.io/rust-ndarray/master/ndarray/dimension/dimension_trait/trait.Dimension.html\" title=\"trait ndarray::dimension::dimension_trait::Dimension\">Dimension</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: <a class=\"trait\" href=\"http://bluss.github.io/rust-ndarray/master/ndarray/data_traits/trait.DataOwned.html\" title=\"trait ndarray::data_traits::DataOwned\">DataOwned</a>&lt;Elem = A&gt; + <a class=\"trait\" href=\"http://bluss.github.io/rust-ndarray/master/ndarray/data_traits/trait.DataMut.html\" title=\"trait ndarray::data_traits::DataMut\">DataMut</a>,&nbsp;</span>","impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/trait.Neg.html\" title=\"trait core::ops::Neg\">Neg</a> for <a class=\"struct\" href=\"lumol/types/struct.Vector3D.html\" title=\"struct lumol::types::Vector3D\">Vector3D</a>","impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/trait.Neg.html\" title=\"trait core::ops::Neg\">Neg</a> for &amp;'a <a class=\"struct\" href=\"lumol/types/struct.Vector3D.html\" title=\"struct lumol::types::Vector3D\">Vector3D</a>","impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/trait.Neg.html\" title=\"trait core::ops::Neg\">Neg</a> for &amp;'a mut <a class=\"struct\" href=\"lumol/types/struct.Vector3D.html\" title=\"struct lumol::types::Vector3D\">Vector3D</a>","impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/trait.Neg.html\" title=\"trait core::ops::Neg\">Neg</a> for <a class=\"struct\" href=\"lumol/types/struct.Complex.html\" title=\"struct lumol::types::Complex\">Complex</a>",];

            if (window.register_implementors) {
                window.register_implementors(implementors);
            } else {
                window.pending_implementors = implementors;
            }
        
})()
